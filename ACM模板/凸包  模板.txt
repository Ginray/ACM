#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#include<math.h>
#define Maxn 100005
#define PF(a)   ((a)*(a))

int stack [Maxn];
int top;
typedef struct POINT
{
   double x;
   double y;

 } POINT;

 POINT point [Maxn];

void swap (POINT point[],int x,int y)
{
   POINT tmp;
   tmp=point[x];
   point[x]=point[y];
   point[y]=tmp;
return ;
}

double multi(POINT p1,POINT p2,POINT p0) //叉乘
{
    return ((p1.x-p0.x)*(p2.y-p0.y)-(p1.y-p0.y)*(p2.x-p0.x));
}

double distence(POINT p1,POINT p2) //p1,p2的距离
{
    return sqrt((double)(p1.x-p2.x)*(p1.x-p2.x)+(double)(p1.y-p2.y)*(p1.y-p2.y));
}

int cmp(const void *a,const void *b)
{
    POINT *c=(POINT *)a;
    POINT *d=(POINT *)b;
    double k=multi(*c,*d,point[0]);
    if(k<0) return 1;
    else if(k==0&&distence(*c,point[0])>=distence(*d,point[0])) return 1; //极角相同，比距离
    else return -1;
}


void grahamscan(int n)
{
    int i,u;
    u=0;
    for(i = 1;i<= n-1;i++) //找到最左下的点p0
        if((point[i].y < point[u].y)||(point[i].y==point[u].y&&point[i].x < point[u].x))
            u=i;

    swap(point ,0,u);
    qsort(point +1,n-1,sizeof(point[0]),cmp);
    for(i=0;i<=2;i++)
        stack[i]=i;
    top=2;
    for(i=3;i<=n-1;i++)
    {
             while(multi(point[i],point[stack[top]],point[stack[top-1]])>=0) //弹出非左转的点
     {
            if(top==0)break;
            top--;
    }
        top++;
        stack[top] = i;
    }
}

//求凸包的面积
double polygonArea(int n,POINT p[])
{
    double area;
    int i;
    area = 0;
    for(i = 1;i <= n;i++){
        area += (p[stack[i - 1]].x * p[stack[i % n]].y - p[stack[i % n]].x * p[stack[i - 1]].y);
    }
    return fabs(area) / 2;
}

//求凸包的周长
double  polygonLen(int n,POINT p[])
{
double len=0;
for(int i=0;i<top;i++)
    len+= sqrt((double) PF(p[stack[i +1]].x-p[stack[i ]].x)+(double)PF(p[stack[i +1]].y-p[stack[i ]].y) );

len+= sqrt((double) PF(p[stack[top]].x-p[stack[0 ]].x)+(double)PF(p[stack[top]].y-p[stack[0 ]].y) );


    return len;

}


int main()
{
    int i;
    int n;
    while(scanf("%d",&n)!=EOF)
    {
    if(!n)
        break;


    for(i=0;i<n;i++)
        scanf("%lf%lf",&(point[i].x),&(point[i].y));

    grahamscan(n);
    printf("凸包的点  （点大于三个时）\n");
    for(i=0;i<=top;i++)
        printf("%lf %lf \n",point[stack[i]].x,point[stack[i]].y);



    //求凸包的周长
    if(n==1)
    {
        printf("len=0.00\n");

    }
    else if(n==2)
    {
        double dis=sqrt( (point[0].x-point[1].x)*(point[0].x-point[1].x)+(point[0].y-point[1].y)*(point[0].y-point[1].y));
        printf("len=%.2lf\n",dis);

    }
    else
    printf("len=%.2lf\n",polygonLen(n,point));


    //求凸包的面积
    printf("area=%.2lf\n",polygonArea(n,point));

    }
    return 0;
}
