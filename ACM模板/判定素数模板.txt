#include<stdio.h>
#include<stdlib.h>
#include<math.h>
int  witness(__int64 a,__int64 n)
{
    __int64 t,d,x;
    d=1;
    int i=ceil(log(n-1.0)/log(2.0)) - 1;
    for(;i>=0;i--)
    {
        x=d;  d=(d*d)%n;
        if(d==1 && x!=1 && x!=n-1) return 1;
        if( ((n-1) & (1<<i)) > 0)
            d=(d*a)%n;
    }
    return d==1? 0 : 1;
}
int miller_rabin(__int64 n)
{
    if(n==2)    return 1;
    if(n==1 || ((n&1)==0))    return 0;
    for(int i=0;i<50;i++){
        __int64 a=rand()*(n-2)/RAND_MAX +1;
        if(witness(a, n))    return 0;
    }
    return 1;


}

int main()
{
 int n;
 while(scanf("%d",&n)!=EOF)
 {
     int ans=0;
     __int64 x;
    while(n--)
    {
    scanf("%I64d",&x);
    if(miller_rabin(x))
       ans++;

    }
    printf("%d\n",ans);

 }
return 0;


}
