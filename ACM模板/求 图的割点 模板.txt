#include<stdio.h>
#include<stdlib.h>
#include<string.h>

const int N=105;

struct node
{
int to;
int next;
}p[N*N];



int dfn[N],low[N];//用dfn[u]记录节点u在DFS过程中被遍历到的次序号，
                            //low[u]记录节点u或u的子树通过非父子边追溯到最早的祖先节点（即DFS次序号最小）

int head[N],vis[N];
int cut [N];
int m,e,root;


int min (int a,int b)
{
return a<b?a:b;
}


void add(int u,int v)
{
    p[e].to=v;
    p[e].next=head[u];
    head[u]=e++;
}


void dfs (int u,int father,int a)
{
    int son=0;
    vis[u]=1;
    dfn[u]=low[u]=a;

    for(int i=head[u];i!=-1;i=p[i].next)
    {
            int v=p[i].to;
            if(vis[v]==1&&v!=father)
            low[u]=min(low[u],dfn[v]);
            if(vis[v]==0)
            {
                dfs(v,u,a+1);
                son++;
                low[u]=min(low[u],low[v]);


            if((u==root&&son>1)||(u!=root&&low[v]>=dfn[u]))
              cut[u]=1;

            }


    }

    vis[u]=2;

}




int main ( )
{
  while(scanf("%d",&m)!=EOF&&m!=0)
  {
        memset(dfn,0,sizeof(dfn));
        memset(low,0,sizeof(low));
        memset(head,-1,sizeof(head));
        memset(vis,0,sizeof(vis));
        memset(cut,0,sizeof(cut));

       int x;
       e=0;
       while(scanf("%d",&x)!=EOF&&x!=0)
       {
       while(getchar()!='\n')
       {
        int y;           //表示x和y都有相连 且是无向图
        scanf("%d",&y);
        add(x,y);
        add(y,x);
       }

       }


      root =1;
       dfs(1,-1,1);
       int sum=0;

       for(int i=1;i<=m;i++)
       {
       if(cut[i]==1)
           sum++;
       }
       printf("%d\n",sum);


  }
return 0;
}














